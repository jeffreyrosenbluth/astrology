extern crate strum;
use libswe_sys::sweconst::Signs;
use svg::node::element::path::{Data, Number};
use svg::node::element::{Group, Path};
use svg::Document;

pub fn draw_sign(sign: Signs) -> Document {
    let size: (Number, Number);
    let document: Document;
    match sign {
        Signs::Aries => {
            size = (50.0, 50.0);
            /*            let data = Data::new()
                .move_to((2796.0, 5449.0)) // M
                .line_by((0.0, -13.0)) // l
                .cubic_curve_by((0.0, -257.0, -26.0, -543.0, -77.0, -857.0))
                .cubic_curve_by((-52.0, -315.0, -115.0, -572.0, -189.0, -771.0))
                .cubic_curve_by((
                    -162.0, -432.0, -336.0, -648.0, -523.0, -648.0,
                ))
                .cubic_curve_by((-83.0, 0.0, -151.0, 36.0, -204.0, 109.0))
                .cubic_curve_by((-52.0, 73.0, -78.0, 167.0, -78.0, 284.0))
                .cubic_curve_by((0.0, 154.0, 49.0, 313.0, 149.0, 477.0))
                .line_by((-203.0, 0.0)) // l
                .cubic_curve_by((-98.0, -177.0, -147.0, -343.0, -147.0, -497.0))
                .cubic_curve_by((0.0, -160.0, 46.0, -292.0, 138.0, -398.0))
                .cubic_curve_by((92.0, -106.0, 208.0, -160.0, 347.0, -160.0))
                .cubic_curve_by((225.0, 0.0, 415.0, 151.0, 573.0, 454.0))
                .cubic_curve_by((157.0, 301.0, 256.0, 706.0, 297.0, 1215.0)) // c
                .line_by((34.0, 0.0)) // l
                .cubic_curve_by((34.0, -498.0, 132.0, -901.0, 292.0, -1208.0))
                .cubic_curve_by((160.0, -307.0, 354.0, -461.0, 579.0, -461.0))
                .cubic_curve_by((139.0, 0.0, 254.0, 53.0, 346.0, 158.0))
                .cubic_curve_by((92.0, 104.0, 138.0, 236.0, 138.0, 396.0))
                .cubic_curve_by((0.0, 155.0, -49.0, 322.0, -146.0, 501.0)) // c
                .line_by((-204.0, 0.0)) // l
                .cubic_curve_by((
                    99.0, -177.0, 149.0, -339.0, 149.0, -488.0, 0.0,
                ))
                .cubic_curve_by((-119.0, -26.0, -215.0, -77.0, -289.0, -52.0))
                .cubic_curve_by((-73.0, -120.0, -110.0, -205.0, -110.0, -181.0))
                .cubic_curve_by((0.0, -350.0, 202.0, -506.0, 604.0, -80.0))
                .cubic_curve_by((205.0, -146.0, 471.0, -201.0, 798.0, -54.0))
                .cubic_curve_by((326.0, -81.0, 626.0, -81.0, 899.0)) // c
                .line_by((0.0, 126.0, -201.0, 0.0)) // l
                .close(); // z
            let path = Path::new()
                .set("fill", "black")
                .set("stroke", "black")
                .set("stroke-width", 1)
                .set("d", data);
            let group = Group::new()
                .set(
                    "transform",
                    "matrix(4.487579,0,0,4.505588,-8862.027,-12858.95)",
                )
                .add(path);*/
            let data = Data::new()
                .move_to((64.28125, 95.179581)) // M
                .line_to((64.28125, 91.398331)) // L
                .cubic_curve_to((
                    64.281226, 88.419171, 63.635393, 83.106676, 62.34375,
                    75.460831,
                )) // C
                .cubic_curve_to((
                    61.760395, 71.856687, 60.802062, 68.106691, 59.46875,
                    64.210831,
                )) // C
                .cubic_curve_to((
                    58.114565, 60.252532, 56.6979, 57.148369, 55.21875,
                    54.898331,
                )) // C
                .cubic_curve_to((
                    54.072902, 53.190039, 52.70832, 52.335874, 51.125,
                    52.335831,
                )) // C
                .cubic_curve_to((
                    49.333324, 52.335874, 48.083325, 53.023373, 47.375,
                    54.398331,
                )) // C
                .cubic_curve_to((
                    46.72916, 55.669204, 46.406243, 57.054619, 46.40625,
                    58.554581,
                )) // C
                .cubic_curve_to((
                    46.406243, 61.721281, 47.541659, 64.585861, 49.8125,
                    67.148331,
                )) // C
                .line_to((44.5, 67.148331)) // L
                .cubic_curve_to((
                    42.666664, 64.335862, 41.749998, 61.367115, 41.75,
                    58.242081,
                )) // C
                .cubic_curve_to((
                    41.749998, 54.971288, 42.624997, 52.40879, 44.375,
                    50.554581,
                )) // C
                .cubic_curve_to((
                    46.187494, 48.637961, 48.385408, 47.679628, 50.96875,
                    47.679581,
                )) // C
                .cubic_curve_to((
                    54.302069, 47.679628, 56.906233, 49.054627, 58.78125,
                    51.804581,
                )) // C
                .cubic_curve_to((
                    60.906229, 54.908788, 62.67706, 58.679617, 64.09375,
                    63.117081,
                )) // C
                .cubic_curve_to((
                    65.093725, 66.346276, 65.937474, 69.919189, 66.625,
                    73.835831,
                )) // C
                .cubic_curve_to((
                    67.312472, 69.919189, 68.156222, 66.346276, 69.15625,
                    63.117081,
                )) // C
                .cubic_curve_to((
                    70.489553, 58.783784, 72.260384, 55.012954, 74.46875,
                    51.804581,
                )) // C
                .cubic_curve_to((
                    76.343713, 49.054627, 78.947878, 47.679628, 82.28125,
                    47.679581,
                )) // C
                .cubic_curve_to((
                    84.864538, 47.679628, 87.062453, 48.637961, 88.875,
                    50.554581,
                )) // C
                .cubic_curve_to((
                    90.624949, 52.40879, 91.499948, 54.971288, 91.5, 58.242081,
                )) // C
                .cubic_curve_to((
                    91.499948, 61.367115, 90.583283, 64.335862, 88.75,
                    67.148331,
                )) // C
                .line_to((83.4375, 67.148331)) // L
                .cubic_curve_to((
                    85.708287, 64.585861, 86.843703, 61.721281, 86.84375,
                    58.554581,
                )) // C
                .cubic_curve_to((
                    86.843703, 57.054619, 86.520787, 55.669204, 85.875,
                    54.398331,
                )) // C
                .cubic_curve_to((
                    85.166621, 53.023373, 83.916623, 52.335874, 82.125,
                    52.335831,
                )) // C
                .cubic_curve_to((
                    80.541626, 52.335874, 79.177044, 53.190039, 78.03125,
                    54.898331,
                )) // C
                .cubic_curve_to((
                    76.552047, 57.148369, 75.135381, 60.252532, 73.78125,
                    64.210831,
                )) // C
                .cubic_curve_to((
                    72.447884, 68.106691, 71.489552, 71.856687, 70.90625,
                    75.460831,
                )) // C
                .cubic_curve_to((
                    69.614554, 83.106676, 68.968721, 88.419171, 68.96875,
                    91.398331,
                ))
                .line_to((68.96875, 95.179581)) // L
                .line_to((64.28125, 95.179581)); // L
            let path = Path::new()
                .set("fill", "black")
                .set("stroke", "black")
                .set("stroke-width", 1)
                .set("d", data);
            document = Document::new()
                .set("viewBox", (0, 0, size.0, size.1))
                .add(path);
        },
        _ => {
            document = Document::new().set("viewBox", (0, 0, 50, 50));
        },
    }
    document
}
